/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cl.duoc.portafolio.vista;

import cl.duoc.portafolio.controller.UsuarioController;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;
import cl.duoc.portafolio.entities.Usuario;
import java.awt.Dialog;
import java.awt.Frame;

/**
 *
 * @author Edo
 */
public class UsuarioView extends javax.swing.JInternalFrame {

    private final static Logger logger = Logger.getLogger(UsuarioView.class);

    /**
     * Creates new form Usuario
     */
    public UsuarioView() {
        initComponents();
        cargaTabla();
    }

    /**
     * método para refrescar la tabla
     */
    private void cargaTabla() {
        UsuarioController usuCont = null;
        try {
            usuCont = new UsuarioController();
            //String inactivos = chbInactivos.isSelected() ? "-1" : "1";
            List<cl.duoc.portafolio.entities.Usuario> listaUsuarios = usuCont.getUsuarios("-1");//(inactivos);
            String col[] = {"Rut", "Nombre", "Apellido P", "Apellido M", "Clave", "Fecha Contrato", "Fecha Ingreso", "Activo"};

            DefaultTableModel tableModel = (DefaultTableModel) this.tblUsuarios.getModel();
            tableModel.setRowCount(0);//al setear en cero, elimina de verdad todas las filas del objeto JTable (sean o no las que vienen por defecto)
            tableModel.setColumnIdentifiers(col);

            for (cl.duoc.portafolio.entities.Usuario usu : listaUsuarios) {
                Object[] row = new Object[]{usu.getRut(), usu.getNombre(), usu.getApellidop(), usu.getApellidom(), usu.getPassword(), usu.getFecha_contrato(), usu.getFecha_ingreso(), usu.getFlag_activo() == 1 ? "Si" : "No"};
                tableModel.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            usuCont = null;
        }
    }

    /**
     * método para encontrar el index, usando el nombre de la columna
     */
    private int getIndexColumnByName(javax.swing.JTable tabla, String nombre) {
        for (int i = 0; i < tabla.getColumnCount(); i++) {
            if (tabla.getColumnName(i).equals(nombre)) {
                return i;
            }
        }
        return -1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnActivar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        btnCrear = new javax.swing.JButton();
        lblTitulo = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setClosable(true);
        setMaximizable(true);
        setTitle("Listado de Usuarios");
        setMaximumSize(new java.awt.Dimension(1024, 768));
        setNormalBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setPreferredSize(new java.awt.Dimension(1024, 600));

        btnActivar.setText("Activar / Desactivar");
        btnActivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActivarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        tblUsuarios.setAutoCreateRowSorter(true);
        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblUsuarios.setUpdateSelectionOnSort(false);
        jScrollPane1.setViewportView(tblUsuarios);

        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        lblTitulo.setFont(new java.awt.Font("Lucida Grande", 1, 20)); // NOI18N
        lblTitulo.setText("Lista de Usuarios Activos ");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        jLabel4.setText("Para editar un usuario solo debe seleccionarlo y luego presionar en el boton editar ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(661, 661, 661))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(496, 496, 496)
                                .addComponent(btnCrear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btnActivar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(55, 55, 55)))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCrear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnActivar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(47, 47, 47))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        // TODO add your handling code here:

        try {
            DlgCrearUsuario dlg = new DlgCrearUsuario(this, true, null);
            dlg.setTitle("Agregar Usuario");
            dlg.setVisible(true);
        } catch (Exception e) {
            logger.error("Error grave creando usuario.", e);
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        UsuarioController usuarioCont = null;
        try {
            usuarioCont = new UsuarioController();
            if (this.tblUsuarios.getSelectedRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Error: Debe seleccionar un registro de la tabla para Actualizar.", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                String rut = String.valueOf(this.tblUsuarios.getValueAt(this.tblUsuarios.getSelectedRow(), 0)).trim();
                Usuario usu = usuarioCont.obtenerUsuario(rut);
                DlgCrearUsuario dlg = new DlgCrearUsuario(this, true, usu);
                dlg.setTitle("Modificar Usuario");
                dlg.setVisible(true);
            }
        } catch (Exception e) {
            logger.error("Error grave actualizando usuario.", e);
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            usuarioCont = null;
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnActivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActivarActionPerformed
        // TODO add your handling code here:
        UsuarioController usuCont = null;
        int activo = 0;
        try {
            usuCont = new UsuarioController();
            if (this.tblUsuarios.getSelectedRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Error: Debe seleccionar un usuario para Activar / Desactivar.", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                String rut = String.valueOf(this.tblUsuarios.getValueAt(this.tblUsuarios.getSelectedRow(), 0)).trim();
                //busco valor de "activo", pero INVERTIDO, porque lo que quiere el usuario en esta acción, es setear lo opuesto al estado actual
                activo = this.tblUsuarios.getValueAt(this.tblUsuarios.getSelectedRow(), getIndexColumnByName(this.tblUsuarios, "Activo")).toString().trim().toLowerCase().equals("si") ? 0 : 1;

                boolean resultado;
                resultado = usuCont.activarUsuario(rut, activo);
                if (!resultado) {
                    JOptionPane.showMessageDialog(this, "Error no controlado ", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    this.cargaTabla();
                    if (activo == 0) {
                        JOptionPane.showMessageDialog(this, "Usuario desactivado correctamente.");
                    } else {
                        JOptionPane.showMessageDialog(this, "Usuario activado correctamente.");
                    }
                }
            }
        } catch (Exception e) {
            logger.error("Error grave creando usuario.", e);
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            usuCont = null;
        }
    }//GEN-LAST:event_btnActivarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActivar;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tblUsuarios;
    // End of variables declaration//GEN-END:variables
}
